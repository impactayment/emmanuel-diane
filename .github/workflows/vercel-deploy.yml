name: Vercel Deploy

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: List all secrets (debug)
        run: |
          echo "=== Debug: Checking secret availability ==="
          echo "Repository: ${{ github.repository }}"
          echo "Actor: ${{ github.actor }}"
          echo "Event: ${{ github.event_name }}"
          echo ""
          echo "Testing secret access methods:"
          echo "Method 1 - Direct: VERCEL_TOKEN=${{ secrets.VERCEL_TOKEN }}"
          echo "Method 1 - Length: ${#VERCEL_TOKEN}"
          echo ""
          
          # Create .vercel directory
          mkdir -p .vercel
          
          # Create project.json if secrets are available
          if [ -n "${{ secrets.VERCEL_ORG_ID }}" ] && [ -n "${{ secrets.VERCEL_PROJECT_ID }}" ]; then
            echo '{"orgId":"${{ secrets.VERCEL_ORG_ID }}","projectId":"${{ secrets.VERCEL_PROJECT_ID }}"}' > .vercel/project.json
            echo "✅ Created .vercel/project.json"
          else
            echo "❌ Cannot create project.json - missing ORG_ID or PROJECT_ID"
          fi
          
          # Final check
          if [ -z "${{ secrets.VERCEL_TOKEN }}" ] || [ "${{ secrets.VERCEL_TOKEN }}" = "" ]; then
            echo ""
            echo "❌ CRITICAL ERROR: VERCEL_TOKEN secret is not properly configured!"
            echo ""
            echo "Please follow these steps:"
            echo "1. Go to: https://github.com/${{ github.repository }}/settings/secrets/actions"
            echo "2. Delete the existing VERCEL_TOKEN if it exists"
            echo "3. Click 'New repository secret'"
            echo "4. Name: VERCEL_TOKEN (exactly this, case sensitive)"
            echo "5. Value: Your token from https://vercel.com/account/tokens"
            echo "6. Make sure there are NO spaces before or after the token"
            echo ""
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      # Deploy to production when pushing to main
      - name: Deploy to Production
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo "Deploying to production..."
          vercel --version
          vercel pull --yes --environment=production --token="${{ secrets.VERCEL_TOKEN }}"
          vercel build --prod --token="${{ secrets.VERCEL_TOKEN }}"
          vercel deploy --prebuilt --prod --token="${{ secrets.VERCEL_TOKEN }}"
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      # Deploy preview for pull requests
      - name: Deploy Preview
        if: github.event_name == 'pull_request'
        id: deploy-preview
        run: |
          echo "Deploying preview..."
          vercel --version
          vercel pull --yes --environment=preview --token="${{ secrets.VERCEL_TOKEN }}"
          vercel build --token="${{ secrets.VERCEL_TOKEN }}"
          DEPLOYMENT_URL=$(vercel deploy --prebuilt --token="${{ secrets.VERCEL_TOKEN }}")
          echo "DEPLOYMENT_URL=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      # Comment on PR with preview URL
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const deploymentUrl = '${{ steps.deploy-preview.outputs.DEPLOYMENT_URL }}';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `🚀 **Preview déployée avec succès!**\n\n🔗 URL de prévisualisation: ${deploymentUrl}\n\n✅ Cette preview sera automatiquement mise à jour à chaque nouveau commit.`
            });