name: Vercel Protection Manager

on:
  workflow_dispatch:
    inputs:
      protection:
        description: 'Protection type (none, password, vercel)'
        required: true
        default: 'none'
        type: choice
        options:
          - none
          - password
          - vercel
      password:
        description: 'Protection password (if protection=password)'
        required: false
        type: string

jobs:
  manage-protection:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Configure Vercel Protection
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          echo "üîß Configuration de la protection Vercel..."
          
          # Cr√©er le fichier de configuration Vercel
          mkdir -p .vercel
          echo '{"orgId":"${{ secrets.VERCEL_ORG_ID }}","projectId":"${{ secrets.VERCEL_PROJECT_ID }}"}' > .vercel/project.json
          
          # D√©terminer le type de protection
          PROTECTION_TYPE="${{ github.event.inputs.protection }}"
          
          if [ "$PROTECTION_TYPE" = "none" ]; then
            echo "üìÇ D√©sactivation de toute protection..."
            
            # Utiliser l'API Vercel pour d√©sactiver la protection
            curl -X PATCH \
              "https://api.vercel.com/v9/projects/${{ secrets.VERCEL_PROJECT_ID }}" \
              -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d '{
                "passwordProtection": null,
                "ssoProtection": null,
                "trustedIps": null
              }'
              
            echo "‚úÖ Protection d√©sactiv√©e"
            
          elif [ "$PROTECTION_TYPE" = "password" ]; then
            echo "üîí Configuration de la protection par mot de passe..."
            
            # Configurer la protection par mot de passe
            curl -X PATCH \
              "https://api.vercel.com/v9/projects/${{ secrets.VERCEL_PROJECT_ID }}" \
              -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d '{
                "passwordProtection": {
                  "deploymentType": "all",
                  "password": "${{ github.event.inputs.password }}"
                }
              }'
              
            echo "‚úÖ Protection par mot de passe configur√©e"
            
          elif [ "$PROTECTION_TYPE" = "vercel" ]; then
            echo "üîê Configuration de Vercel Authentication..."
            
            # Note: Vercel Authentication n√©cessite des configurations au niveau du team
            echo "‚ö†Ô∏è Vercel Authentication doit √™tre configur√© dans le dashboard Vercel"
            echo "URL: https://vercel.com/${{ secrets.VERCEL_ORG_ID }}/${{ secrets.VERCEL_PROJECT_ID }}/settings/security"
          fi

      - name: Force Redeploy
        if: github.event.inputs.protection == 'none' || github.event.inputs.protection == 'password'
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          echo "üöÄ Red√©ploiement forc√©..."
          
          # D√©clencher un red√©ploiement
          vercel --prod --force --token="${{ secrets.VERCEL_TOKEN }}" --scope="${{ secrets.VERCEL_ORG_ID }}"
          
          echo "‚úÖ Site red√©ploy√© avec les nouvelles configurations de protection"
          
      - name: Get Deployment URL
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          # R√©cup√©rer l'URL du d√©ploiement
          DEPLOYMENT_URL=$(curl -s \
            "https://api.vercel.com/v9/projects/${{ secrets.VERCEL_PROJECT_ID }}/deployments?limit=1" \
            -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
            | jq -r '.deployments[0].url')
            
          echo "üåê URL du d√©ploiement: https://$DEPLOYMENT_URL"
          echo "üîó URL principale: https://regis-yvette.vercel.app"
          
          # Tester l'accessibilit√©
          STATUS_CODE=$(curl -s -o /dev/null -w "%{http_code}" "https://regis-yvette.vercel.app")
          
          if [ "$STATUS_CODE" = "200" ]; then
            echo "‚úÖ Site accessible publiquement!"
          elif [ "$STATUS_CODE" = "401" ]; then
            echo "‚ö†Ô∏è Site prot√©g√© (authentification requise)"
          else
            echo "‚ùå Status HTTP: $STATUS_CODE"
          fi